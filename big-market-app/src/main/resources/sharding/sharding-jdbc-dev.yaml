mode:
  # 运行模式类型。可选配置：内存模式 Memory、单机模式 Standalone、集群模式 Cluster - 目前为单机模式
  type: Standalone

dataSources:
  ds_default:
    # 使用Hikari连接池
    dataSourceClassName: com.zaxxer.hikari.HikariDataSource
    driverClassName: com.mysql.cj.jdbc.Driver
    # 数据库URL连接
    jdbcUrl: jdbc:mysql://127.0.0.1:13306/big_market?useUnicode=true&characterEncoding=utf8&autoReconnect=true&zeroDateTimeBehavior=convertToNull&serverTimezone=UTC&useSSL=true
    # 数据库用户名
    username: root
    # 数据库密码
    password: 123456
    # 数据库连接超时时间，默认30秒
    connectionTimeoutMilliseconds: 30000
    # 空闲连接存活最大时间，默认600000（10分钟）
    idleTimeoutMilliseconds: 60000
    # 连接最长生命周期，默认1800000（30分钟）
    maxLifetimeMilliseconds: 1800000
    # 连接池最大连接数
    maxPoolSize: 15
    # 连接池最小连接数
    minPoolSize: 3

  ds_0:
    dataSourceClassName: com.zaxxer.hikari.HikariDataSource
    driverClassName: com.mysql.cj.jdbc.Driver
    jdbcUrl: jdbc:mysql://127.0.0.1:13306/big_market_01?useUnicode=true&characterEncoding=utf8&autoReconnect=true&zeroDateTimeBehavior=convertToNull&serverTimezone=UTC&useSSL=true
    username: root
    password: 123456
    connectionTimeoutMilliseconds: 30000
    idleTimeoutMilliseconds: 60000
    maxLifetimeMilliseconds: 1800000
    maxPoolSize: 15
    minPoolSize: 3

  ds_1:
    dataSourceClassName: com.zaxxer.hikari.HikariDataSource
    driverClassName: com.mysql.cj.jdbc.Driver
    jdbcUrl: jdbc:mysql://127.0.0.1:13306/big_market_02?useUnicode=true&characterEncoding=utf8&autoReconnect=true&zeroDateTimeBehavior=convertToNull&serverTimezone=UTC&useSSL=true
    username: root
    password: 123456
    connectionTimeoutMilliseconds: 30000
    idleTimeoutMilliseconds: 60000
    maxLifetimeMilliseconds: 1800000
    maxPoolSize: 15
    minPoolSize: 3

rules:
  - !SINGLE
    tables:
      - ds_default.*  # 加载指定单表
  - !SHARDING
    # 默认库的路由策略
    defaultDatabaseStrategy:
      standard:
        shardingColumn: user_id
        shardingAlgorithmName: database_inline
    # 默认表的路由策略
    defaultTableStrategy:
      none:
    # 表的路由
    tables:
      raffle_activity_account:
        actualDataNodes: ds_$->{0..1}.raffle_activity_account
      raffle_activity_account_day:
        actualDataNodes: ds_$->{0..1}.raffle_activity_account_day
      raffle_activity_account_month:
        actualDataNodes: ds_$->{0..1}.raffle_activity_account_month
      task:
        actualDataNodes: ds_$->{0..1}.task
      raffle_activity_order:
        actualDataNodes: ds_$->{0..1}.raffle_activity_order_00$->{0..3}
        tableStrategy:
          standard:
            shardingColumn: user_id
            shardingAlgorithmName: sys_tb_alg
      user_award_record:
        actualDataNodes: ds_$->{0..1}.user_award_record_00$->{0..3}
        tableStrategy:
          standard:
            shardingColumn: user_id
            shardingAlgorithmName: sys_tb_alg
      user_raffle_order:
        actualDataNodes: ds_$->{0..1}.user_raffle_order_00$->{0..3}
        tableStrategy:
          standard:
            shardingColumn: user_id
            shardingAlgorithmName: sys_tb_alg
      user_behavior_rebate_order:
        actualDataNodes: ds_$->{0..1}.user_behavior_rebate_order_00$->{0..3}
        tableStrategy:
          standard:
            shardingColumn: user_id
            shardingAlgorithmName: sys_tb_alg
    bindingTables:
      - raffle_activity_account, raffle_activity_account_day, raffle_activity_account_month
      - user_award_record, user_raffle_order, raffle_activity_order, user_behavior_rebate_order
    # 路由算法
    shardingAlgorithms:
      # 分库算法
      database_inline:
        type: INLINE
        props:
          algorithm-expression: ds_$->{Math.abs(user_id.hashCode()) % 2}
      # 分表默认算法
      sys_tb_alg:
        type: CLASS_BASED
        props:
          strategy: standard
          algorithmClassName: com.lyfx.types.common.MyTableAlgorithm  # 算法类名称

props:
  # 是否在日志中打印 SQL。
  # 打印 SQL 可以帮助开发者快速定位系统问题。日志内容包含：逻辑 SQL，真实 SQL 和 SQL 解析结果。
  # 如果开启配置，日志将使用 Topic ShardingSphere-SQL，日志级别是 INFO。 false
  sql-show: false
  # 是否在日志中打印简单风格的 SQL。false
  sql-simple: true
  # 用于设置任务处理线程池的大小。每个 ShardingSphereDataSource 使用一个独立的线程池，同一个 JVM 的不同数据源不共享线程池。
  executor-size: 20
  # 查询请求在每个数据库实例中所能使用的最大连接数。1
  max-connections-size-per-query: 1
  # 在程序启动和更新时，是否检查分片元数据的结构一致性。
  check-table-metadata-enabled: false
  # 在程序启动和更新时，是否检查重复表。false
  check-duplicate-table-enabled: false




